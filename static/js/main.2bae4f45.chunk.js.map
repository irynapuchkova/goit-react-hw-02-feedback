{"version":3,"sources":["App/App.styled.jsx","Section /Section.styled.jsx","Section /Section.jsx","Statistics/Statistics.styled.jsx","Statistics/Statistics.jsx","FeedbackOptions/FeedbackOptions.styled.jsx","FeedbackOptions/FeedbackOptions.jsx","App/App.jsx","index.js"],"names":["Container","styled","div","Wrapper","Title","h2","props","primary","Section","children","title","CounterList","ul","CounterItem","li","Counter","span","Total","Percentage","Statistics","options","onTotal","onPosivePercent","total","positivePercentage","Number","parseInt","good","neutral","bad","BtnList","Button","button","FeedbackOptions","onLeaveFeedback","console","log","type","onClick","App","state","e","value","target","textContent","toLowerCase","hasOwnProperty","setState","prev","countTotalFeedback","Object","values","reduce","next","countPositiveFeedbackPercentage","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAEaA,EAAYC,IAAOC,IAAV,wGCATC,EAAUF,IAAOC,IAAV,2EAKPE,EAAQH,IAAOI,GAAV,4DAET,SAACC,GAAD,OAAWA,EAAMC,QAAU,gBAAkB,a,OCLvC,SAASC,EAAT,GAA+C,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,MAAOH,EAAU,EAAVA,QACjD,OACE,eAACJ,EAAD,WACGO,GACC,cAACN,EAAD,CAAOG,QAASA,EAAhB,SAA0BG,IAC3BD,KCPA,I,IAAME,EAAcV,IAAOW,GAAV,4FAMXC,EAAcZ,IAAOa,GAAV,oHAOXC,EAAUd,IAAOe,KAAV,6CAGPC,EAAQhB,IAAOe,KAAV,+CAILE,EAAajB,IAAOe,KAAV,6CCjBR,SAASG,EAAT,GAA0D,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAE9CC,EAAQF,IACRG,EAAqBC,OAAOC,SAASJ,EAAgBC,IAE3D,OACE,eAACZ,EAAD,WAEE,eAACE,EAAD,mBACE,cAACE,EAAD,UAAUK,EAAQO,UACpB,eAACd,EAAD,sBACE,cAACE,EAAD,UAAUK,EAAQQ,aACpB,eAACf,EAAD,kBACE,cAACE,EAAD,UAAUK,EAAQS,SAEpB,eAAChB,EAAD,oBACE,cAACI,EAAD,UAAQM,OAIV,eAACV,EAAD,gCACE,eAACK,EAAD,WACGM,GAAsB,EACnBA,EACA,EAHN,cCxBD,IAAMM,EAAU7B,IAAOC,IAAV,kEAKP6B,EAAS9B,IAAO+B,OAAV,8NCHJ,SAASC,EAAT,GAAsD,IAA5Bb,EAA2B,EAA3BA,QAASc,EAAkB,EAAlBA,gBAGhD,OAFAC,QAAQC,IAAIhB,GAGV,eAACU,EAAD,WAEM,cAACC,EAAD,CACEM,KAAK,SAASC,QAASJ,EADzB,kBAIA,cAACH,EAAD,CACEM,KAAK,SAASC,QAASJ,EADzB,qBAIA,cAACH,EAAD,CACEM,KAAK,SAASC,QAASJ,EADzB,oB,ICPJK,E,4MAMJC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPS,QAAU,SAACG,GACT,IAAMC,EAAQD,EAAEE,OAAOC,YAAYC,cACnC,GAAI,EAAKL,MAAMM,eAAeJ,GAC5B,OAAQ,EAAKK,UAAS,SAACC,GAAD,sBACnBN,EAAQM,EAAKN,GAAS,O,EAM7BO,mBAAqB,WAGnB,OAFYC,OAAOC,OAAO,EAAKX,OACbY,QAAO,SAACJ,EAAMK,GAAP,OAAgBL,EAAOK,M,EAKlDC,gCAAkC,SAAC/B,GACjC,IAAMC,EAAuC,IAAlB,EAAKgB,MAAMb,KAAaJ,EAEnD,OADAY,QAAQC,IAAIZ,GACLA,G,4CAGT,WACA,OACE,eAACxB,EAAD,WACE,cAACQ,EAAD,CAASE,MAAM,2BAA4BH,SAAO,EAAlD,SACE,cAAC0B,EAAD,CACAb,QAASmC,KAAKf,MACdN,gBAAiBqB,KAAKjB,YAIxB,cAAC9B,EAAD,CAASE,MAAQ,aAAjB,SACE,cAACS,EAAD,CACAQ,KAAM,EACNC,QAAS,EACTC,IAAK,EACLN,MAAO,EACPC,mBAAoB,EACpBJ,QAASmC,KAAKf,MACdnB,QAASkC,KAAKN,mBACd3B,gBAAmBiC,KAAKD,2C,GAvDdE,aA+DHjB,ICrEfkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2bae4f45.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  \n  padding: 0 100px;\n  \n`\n\n\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\nwidth: 500px;\n/* background-color: green; */\n`\n\nexport const Title = styled.h2`\nfont-size: 40px;\ncolor: ${(props) => props.primary ? 'darkslateblue' : 'darkred'}; \n`","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Wrapper, Title } from './Section.styled';\n\nexport default function Section ({children, title, primary}) {\n  return (\n    <Wrapper>\n      {title &&\n        <Title primary={primary}>{title}</Title>}\n      {children}\n    </Wrapper>\n  )\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n}","import styled from \"@emotion/styled\";\n\nexport const CounterList = styled.ul`\ndisplay: flex;\npadding-left: 20px;\n\nflex-direction: column;\n`\nexport const CounterItem = styled.li`\ntext-decoration: none;\nmargin-block-end: 10px;\ndisplay: flex;\ncolor: darkslateblue;\n`\n\nexport const Counter = styled.span`\ncolor: darkred;\n`\nexport const Total = styled.span`\ncolor: darkred;\n\n`\nexport const Percentage = styled.span`\ncolor: darkred;\n`","import React from \"react\";\n\nimport { CounterList, CounterItem, Counter, Percentage, Total} from './Statistics.styled';\n  \n\nexport default function Statistics({options, onTotal, onPosivePercent}) {\n\n  const total = onTotal();\n  const positivePercentage = Number.parseInt(onPosivePercent(total));\n  \n  return (\n    <CounterList>\n        \n      <CounterItem>Good:\n        <Counter>{options.good}</Counter></CounterItem>\n      <CounterItem>Neutral:\n        <Counter>{options.neutral}</Counter></CounterItem>\n      <CounterItem>Bad:\n        <Counter>{options.bad}</Counter></CounterItem>\n        \n      <CounterItem>Total: \n        <Total>{total}\n        </Total>\n      </CounterItem>\n        \n      <CounterItem>Positive feedback: \n        <Percentage>\n          {positivePercentage >= 0\n            ? positivePercentage\n            : 0} %\n        </Percentage>\n        </CounterItem>\n      </CounterList>\n  )\n}","import styled from \"@emotion/styled\";\n\nexport const BtnList = styled.div`\ndisplay: flex;\nflex-direction: row;\n`\n\nexport const Button = styled.button`\npadding: 5px 10px;\n\nwidth: 90px;\nheight: 35px;\nmargin-right: 10px;\n\nborder-radius: 5px;\ncursor: pointer;\n\n&:hover,\n&:focus {\ncolor: darkslateblue;\nbackground-color: yellowgreen;\n}\n`","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {BtnList, Button} from './FeedbackOptions.styled';\n\nexport default function FeedbackOptions({options, onLeaveFeedback}) {\n  console.log(options);\n  \n  return (\n    <BtnList>\n\n          <Button\n            type='button' onClick={onLeaveFeedback}\n            >Good\n          </Button>\n          <Button\n            type='button' onClick={onLeaveFeedback}\n            >Neutral\n          </Button>\n          <Button\n            type='button' onClick={onLeaveFeedback}\n           >Bad\n          </Button>\n    </BtnList>\n  )\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape(),\n}","import 'normalize.css';\nimport './App.styled';\n\nimport { Component } from 'react';\n\nimport Section from '../Section /Section';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport { Container } from './App.styled';\n\n\nclass App extends Component {\n\n  static propTypes = {\n  // \n  }\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n  \n  \n  onClick = (e) => {\n    const value = e.target.textContent.toLowerCase();\n    if (this.state.hasOwnProperty(value)) {\n      return (this.setState((prev) => ({\n        [value]: prev[value] + 1,\n        })\n      ))\n    }\n  }\n\n  countTotalFeedback = () =>{\n    const sum = Object.values(this.state);\n    const total = sum.reduce((prev, next) => prev + next );\n    return total;\n  }\n\n\n  countPositiveFeedbackPercentage = (total) => {\n    const positivePercentage = this.state.good * 100 / total;\n    console.log(positivePercentage);\n    return positivePercentage;\n  }\n\n  render() {\n  return (\n    <Container >\n      <Section title=\"Please, tell us about us\"  primary>\n        <FeedbackOptions\n        options={this.state}\n        onLeaveFeedback={this.onClick}\n      />\n      </Section>\n      \n      <Section title = \"Statistics\">\n        <Statistics\n        good={0}\n        neutral={0}\n        bad={0}\n        total={0}\n        positivePercentage={0}\n        options={this.state}\n        onTotal={this.countTotalFeedback}\n        onPosivePercent = {this.countPositiveFeedbackPercentage}\n      />\n      </Section>\n    </Container>\n  )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}